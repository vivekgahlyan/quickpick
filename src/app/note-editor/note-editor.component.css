/* Make the component fill the viewport and avoid page scroll */
:host {
  display: block;
  height: 100vh;
  box-sizing: border-box;
  padding: 1rem;
  background: var(--background, #f8f9fa);
  overflow: hidden; /* prevent outer page scrolling */
}

/* Center the card but allow it to scale responsively */
.container {
  height: 100%;
  max-width: 1100px;
  margin: 0 auto;
  display: flex;
  align-items: stretch;
  justify-content: center;
}

/* Card should fill the available vertical space */
.card {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  border-radius: 12px;
}

/* Card body becomes a column flex container so middle area can grow/shrink */
.card-body {
  display: flex;
  flex-direction: column;
  padding: 1.25rem;
  min-height: 0; /* important so children can overflow properly */
}

/* Title area: allow to wrap and stay above the scrollable area */
h1.display-5 {
  margin-bottom: 0.75rem;
  font-size: clamp(1.25rem, 2.5vw, 2rem);
}

/* The bordered editor area will grow and allow internal scrolling */
.border.rounded-3.shadow-sm.overflow-hidden {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  min-height: 0; /* allow child to overflow */
  overflow: hidden;
  flex-direction: column; /* enforce normal order */
}

/* Formatting bar stays at its height (non-scrolling) */
.formatting-bar {
  flex: 0 0 auto;
  padding: 0.5rem 0.75rem;
}

/* Editable content expands to fill remaining space and scrolls internally if needed */
.editable-content {
  position: relative;
  flex: 1 1 auto;
  min-height: 160px;
  padding: 0.75rem;
  overflow: auto;
  white-space: pre-wrap;
  outline: none;
  background: #fff;
  border-radius: 0 0 8px 8px;
  box-sizing: border-box;
  display: block;
  direction: ltr; /* or rtl if your language needs it */
}

/* show placeholder via pseudo element when marked empty */
.editable-content.empty::before {
  content: attr(data-placeholder);
  position: absolute;
  left: 0.75rem;
  top: 0.75rem;
  color: #6c757d;
  pointer-events: none;
  font-style: normal;
  white-space: pre-wrap;
}

/* ensure caret appears correctly when empty */
.editable-content.empty:focus::before { opacity: 0.6; }

/* Keep char counter and buttons visible (non-scrolling) */
.d-flex.justify-content-end {
  flex: 0 0 auto;
  margin-top: 0.5rem;
}

/* Button area */
.text-center.mt-4 {
  flex: 0 0 auto;
  margin-top: 0.75rem;
}

/* AI output section: no page scroll, internal scrolling if content is long */
.ai-output {
  margin-top: 1rem;
  padding: 1rem;
  border-left-width: 0.5rem;
  background: #f8f9fa;
  overflow: auto;
  max-height: 38vh; /* keeps it readable but not push page */
}

/* Toast container should remain fixed and not affect layout */
.toast-container {
  z-index: 1200;
}

/* Gradient shiny button for AI action */
.ai-gradient-btn {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center; /* centers the label horizontally */
  gap: 0.75rem;
  padding: 0.65rem 1.25rem;
  padding-left: 2.6rem; /* space for icon (left offset + icon width + gap) */
  min-width: 180px; /* keep wide enough so center is stable */
  box-sizing: border-box;
  font-weight: 600;
  color: #fff;
  background: linear-gradient(135deg, #5b8cff 0%, #7e5bff 50%, #ff5bba 100%);
  border: none;
  border-radius: 999px;
  box-shadow: 0 6px 18px rgba(99, 102, 241, 0.18), inset 0 -2px 6px rgba(255,255,255,0.06);
  cursor: pointer;
  position: relative;
  overflow: hidden;
  transition: transform .14s ease, box-shadow .14s ease, filter .14s ease;
}

/* small scale on press and stronger shadow on hover */
.ai-gradient-btn:hover { transform: translateY(-2px); box-shadow: 0 10px 26px rgba(99,102,241,0.22); }
.ai-gradient-btn:active { transform: translateY(0); }

/* place the icon absolutely on the left edge inside the button */
.ai-gradient-btn .ai-icon {
  position: absolute;
  left: 12px; /* keep this in sync with padding-left */
  top: 50%;
  transform: translateY(-50%);
  z-index: 1;
}

/* label sits in the normal flow and is visually centered by justify-content:center */
.ai-gradient-btn .ai-label {
  width: auto;
  display: inline-block;
  text-align: center;
  padding-left: 0; /* label no longer needs internal left padding */
  z-index: 2;
  pointer-events: none;
}

/* icon styling */
.ai-icon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 1.6rem;
  height: 1.6rem;
  border-radius: 0.5rem;
  background: rgba(255,255,255,0.12);
  box-shadow: 0 2px 8px rgba(0,0,0,0.12);
  color: #fff;
  flex-shrink: 0;
}

/* make svg use currentColor and add a subtle glow */
.ai-icon svg { display: block; color: #fff; filter: drop-shadow(0 2px 6px rgba(124, 58, 237, 0.28)); }

/* glossy shimmer overlay */
.ai-gradient-btn::after {
  content: "";
  position: absolute;
  top: -60%;
  left: -40%;
  width: 40%;
  height: 220%;
  background: linear-gradient(120deg, rgba(255,255,255,0.12), rgba(255,255,255,0.28), rgba(255,255,255,0.06));
  transform: translateX(-100%) rotate(-20deg);
  pointer-events: none;
  transition: transform 0.9s cubic-bezier(.2,.8,.2,1);
}

/* animate shimmer on hover */
.ai-gradient-btn:hover::after { transform: translateX(260%) rotate(-20deg); }

/* label styling */
.ai-label { font-size: 1rem; line-height: 1; }

/* ensure icon spacing and sizes on small screens */
@media (max-width: 576px) {
  .ai-gradient-btn { padding-left: 2.2rem; min-width: 140px; }
  .ai-gradient-btn .ai-icon { left: 10px; width: 1.2rem; height: 1.2rem; }
  .ai-label { font-size: 0.95rem; }
}

/* Responsive tweaks */
@media (max-width: 768px) {
  :host { padding: 0.5rem; }
  .card-body { padding: 0.75rem; }
  .container { max-width: 100%; }
  .text-center.mt-4 .btn { width: 100%; padding-left: 1rem; padding-right: 1rem; }
  .ai-output { max-height: 45vh; padding: 0.75rem; }
  .formatting-bar .btn { font-size: 0.9rem; padding: 0.35rem 0.6rem; }
}